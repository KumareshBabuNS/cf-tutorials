
== Expense Report Application with Rails and PostgreSQL

This application is a sample application which is developed in Ruby version 1.9.2-p180 and Rails version 3.2.9. This is using PostgreSQL as the backend database. Below are the steps which will guide you to set up the application locally as well as on CloudFoundry.

== Prerequisite

* Ruby 1.9.2-p180 should be installed on your machine via <tt>rvm</tt>.
* PostgreSQL should be installed on your machine. Follow this for instructions: http://www.postgresql.org/download/
* <tt>vmc</tt> gem should be installed on your machine to deploy the app on Cloud Foundry.

== Setting up the app locally

* Clone the projcet by using the following command.

  git clone git@github.com:rajdeepd/cf-tutorials.git

* Go to the app folder. Do this by running the below command in terminal.

  cd cf-tutorials/ruby/rails-expense-report-postgres

* Install the gems specified in <tt>Gemfile</tt> by running following command in terminal.

  bundle install

* Modify the authentication details in database configuration file to connect to PostgreSQL database. Do this by replacing <tt>username</tt> and <tt>password</tt> values in <tt>config/database.yml</tt> file with actual values.

* Run the following steps to set up the database.

  bundle exec rake db:create:all  # For creating the database
  bundle exec rake db:migrate # For running the migration files to create tables
  bundle exec rake db:seed # For populating the sample data

* If you get an error like <tt>ExecJS::RuntimeUnavailable</tt> while executing the above commands, then add the below line in Gemfile.

  gem 'therubyracer'

* Install the above gem by running <tt>bundle install</tt> and then run the commands for setting up the database as mentioned in above step.

* Start the server by following comand

  rails s

This will start the server on http://localhost:3000. Open your browser and load this url.

== Deploying the app on Cloud Foundry

* Create the production database by running the following command in terminal

  bundle exec rake db:create RAILS_ENV=production

* Bundle the packages

  bundle package
  bundle install

* Change the configuration for serving the static assets to <tt>true</tt>. Do this by modifying the below line in <tt>config/environments/production.rb</tt> file

  config.serve_static_assets = false

to

  config.serve_static_assets = true

* Precompile the assets by using the following command.

  bundle exec rake assets:precompile

* Install <tt>vmc</tt> gem (if not installed previously on your machine) by running the following command. 

  gem install vmc

* Set vmc target to *cloudfoundry.com* by running the following command.

  vmc target api.cloudfoundry.com

* Login to CloudFoundry using vmc command line tool as shown below.

  vmc login --email --password

* Now push the app to Cloud Foundry by runnig the following commands.

  vmc push --runtime ruby19